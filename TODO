Warn when jeybinding fails

Remove max=5
History for long operations
Options for keyboard only through applet/toggle and popup
Update icon

Keyboard/Keyword shortcut framework:
	* Smart bookmarks: ctrl+letter => search with xxx(letter) for text
	* Directories/files/places/volumes ctrl+letter => open
		dynamic registration when loaded, "static" matches
		
	* Path programs: ctrl+t => execute text in terminal
		static registration from handler
	
	* All: ctrl+letter => action on bookmarked match
		Used with the P.

Ideas from the Net:
	* Tab completions, where applicable, if it doesn't clash with usability

UI TODOs:
	* Truncate strings in the completion view
	* Enable drag-n-drop along with cuemiac, for example dragging file hits to desktop/nautilus
	* An UI for errors/infos happening during module load/init
	* Translucency handling in applet mode, see mini-commander patch in bugzilla
	* Deskbar history matches, history items are matched first

* Cache/Pickle indexes
* Move indexing in a bonobo factory whatever that means
* Hidden gconf key for alt-f2 dialog replacement

Backends TODOs:
	General:
	* Some icons (.desktop one notably) do not scale down, that's ugly
			
	Browsers (ephy, ff, moz): [epiphany.py, mozilla.py]
	* Use Mozilla/FF's history file to present history items
	
	Address Books [evolution.py]
	* Index Thunderbird address book

	Programs [programs.py, pathprograms.py]
	* Monitor changes with gnome vfs
	
	Beagle [beagle.py, beagle-live.py]
	* Use beagle to retreive metadata about files, for example in recent-files ?
			
	Recently-used files [todo]
	* Index and present
	* Wait until 2.14 bug code refactoring upstream
	* Monitor changes with gnome vfs	
	
	Gaim contacts: [galago.py]
	* Use galago instead of custom parsing (python bindings are coming)
	* Allow Send IM to: and Send email to:
	
	File-system: (provide way to open file/dirs) [filesystem.py]
	
	Gtk Bookmarks [gtkbookmarks.py]
	
	Web Address, Email Address: [web_address.py, email_address.py]:
	
	Misc
